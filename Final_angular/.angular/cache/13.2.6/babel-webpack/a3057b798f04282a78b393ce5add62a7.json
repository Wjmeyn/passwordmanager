{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { NotificationService } from '../_services/notification.service';\nimport { CredentialService } from '../_services/credential.service';\nimport { UserService } from '../_services/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/credential.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"../_services/notification.service\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"@angular/router\";\nimport * as i11 from \"../credential/credential.component\";\n\nfunction HomeComponent_credential_component_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"credential-component\", 10);\n    i0.ɵɵlistener(\"eventEmitter\", function HomeComponent_credential_component_10_Template_credential_component_eventEmitter_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.reload();\n    })(\"deleteEvent\", function HomeComponent_credential_component_10_Template_credential_component_deleteEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.deleteCredential($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const credential_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"credential\", credential_r1);\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(credentialService, userService, notifService) {\n      this.credentialService = credentialService;\n      this.userService = userService;\n      this.notifService = notifService;\n      this.searchText = '';\n      this.credentials = [];\n      this.showcredentials = [];\n      this.option = 0;\n    }\n\n    ngOnInit() {\n      if (this.option === 0) {\n        this.loadCredentials();\n      } else if (this.option === 1) {\n        this.loadShared();\n      } else if (this.option === 2) {\n        this.loadSharedWithMe();\n      }\n    }\n\n    reload() {\n      this.loadCredentials();\n\n      if (this.option === 1) {\n        this.loadShared();\n      } else if (this.option === 2) {\n        this.loadSharedWithMe();\n      }\n    }\n\n    loadCredentials() {\n      this.option = 0;\n      this.credentialService.get().subscribe(credentials => {\n        this.credentials = credentials;\n        this.showcredentials = this.credentials;\n        console.log(this.credentials);\n      }, error => {\n        this.notifService.showNotif(error.toString(), 'warning');\n      });\n    }\n\n    loadShared() {\n      this.showcredentials = [];\n      this.option = 1;\n      this.loadCredentials();\n      setTimeout(() => {\n        for (let i = 0; i < this.credentials.length; i++) {\n          console.log(this.credentials[i].access);\n\n          if (this.credentials[i].access.length > 0) {\n            this.showcredentials.push(this.credentials[i]);\n          }\n        }\n      }, 20);\n    }\n\n    loadSharedWithMe() {\n      this.option = 2;\n      this.showcredentials = null;\n      this.credentialService.getSharedWithMe().subscribe(credentials => {\n        this.showcredentials = credentials;\n      }, error => {\n        this.notifService.showNotif(error.toString(), 'warning');\n      });\n    }\n\n    deleteCredential(domain) {\n      // this.userService.deleteActivity(date);\n      this.credentialService.delete(domain).pipe(first()).subscribe(resp => {\n        this.credentials = null;\n        this.loadCredentials();\n        this.notifService.showNotif(resp, 'response');\n      }, error => {\n        this.notifService.showNotif(error, 'error');\n      });\n    }\n\n    filterCredentials(event) {\n      this.loadCredentials();\n      setTimeout(() => {\n        if (event.target.value !== '') {\n          this.showcredentials = this.credentials.filter(credential => {\n            if (credential.domain.indexOf(event.target.value) > -1) {\n              return true;\n            }\n\n            return false;\n          });\n        }\n      }, 20);\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.CredentialService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.NotificationService));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 15,\n    vars: 1,\n    consts: [[\"mat-button\", \"\", \"color\", \"primary\", 1, \"home\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"shared\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"sharedwith\", 3, \"click\"], [1, \"search\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Search\", 3, \"input\"], [1, \"pa-record-container\"], [\"class\", \"card-item\", 3, \"credential\", \"eventEmitter\", \"deleteEvent\", 4, \"ngFor\", \"ngForOf\"], [1, \"fab-container\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Add new class\", \"routerLink\", \"/add\"], [1, \"material-icons\"], [1, \"card-item\", 3, \"credential\", \"eventEmitter\", \"deleteEvent\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\");\n        i0.ɵɵelementStart(1, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_1_listener() {\n          return ctx.loadCredentials();\n        });\n        i0.ɵɵtext(2, \"My Credentials\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_3_listener() {\n          return ctx.loadShared();\n        });\n        i0.ɵɵtext(4, \"Shared\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_5_listener() {\n          return ctx.loadSharedWithMe();\n        });\n        i0.ɵɵtext(6, \"Shared with me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"input\", function HomeComponent_Template_input_input_8_listener($event) {\n          return ctx.filterCredentials($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵtemplate(10, HomeComponent_credential_component_10_Template, 1, 1, \"credential-component\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵelementStart(13, \"i\", 9);\n        i0.ɵɵtext(14, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.showcredentials);\n      }\n    },\n    directives: [i4.MatToolbar, i5.MatButton, i6.MatFormField, i7.MatInput, i8.NgForOf, i9.MatTooltip, i10.RouterLink, i11.CredentialComponent],\n    styles: [\".course-list-container[_ngcontent-%COMP%]{display:flex;flex-flow:row wrap;border-radius:2px;padding:10px 10px 30px;margin:10px;background-color:#fff}.search[_ngcontent-%COMP%]{font-size:14px;padding-top:8px;color:#6a5acd}.pa-record-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(305px,1fr))}.card-item[_ngcontent-%COMP%]{flex:1;padding:3px;width:300px}.fab-container[_ngcontent-%COMP%]{position:fixed;bottom:15px;right:15px;z-index:100;display:flex;flex-direction:column-reverse;align-items:center}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}