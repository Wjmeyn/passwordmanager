{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { NotificationService } from '../_services/notification.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Credential } from '../_models/Credential';\nimport { CredentialService } from '../_services/credential.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/credential.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/notification.service\";\nimport * as i4 from \"../_services/user.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/menu\";\nimport * as i11 from \"@angular/material/icon\";\n\nfunction CredentialComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Owner: \", ctx_r0.credential.owner, \"\");\n  }\n}\n\nfunction CredentialComponent_button_31_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CredentialComponent_button_31_button_8_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.share(user_r5, ctx_r6.credential);\n    });\n    i0.ɵɵelement(1, \"p\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r4.updateButtons(user_r5));\n    i0.ɵɵpropertyInterpolate(\"id\", user_r5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r5);\n  }\n}\n\nfunction CredentialComponent_button_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"share\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"Share\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 17);\n    i0.ɵɵelementStart(6, \"mat-menu\", null, 18);\n    i0.ɵɵtemplate(8, CredentialComponent_button_31_button_8_Template, 4, 3, \"button\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(7);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r3);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getShareable());\n  }\n}\n\nconst _c0 = function () {\n  return [\"edit\"];\n};\n\nexport let CredentialComponent = /*#__PURE__*/(() => {\n  class CredentialComponent {\n    constructor(credentialService, route, notifService, userService) {\n      this.credentialService = credentialService;\n      this.route = route;\n      this.notifService = notifService;\n      this.userService = userService;\n      this.deleteEvent = new EventEmitter();\n      this.eventEmitter = new EventEmitter();\n      this.users = [];\n    }\n\n    delete(domain) {\n      this.deleteEvent.emit(domain);\n    }\n\n    edit(credential) {\n      this.eventEmitter.emit(credential);\n    }\n\n    ngOnInit() {\n      this.userService.getUsernames().pipe().subscribe(names => {\n        this.users = names;\n      });\n    }\n\n    showPassword(id) {\n      const txtPassword = document.getElementById(id);\n\n      if (txtPassword.type === 'password') {\n        txtPassword.type = 'string';\n      } else {\n        txtPassword.type = 'password';\n      }\n    }\n\n    share(user, credential) {\n      const shared = document.getElementById(user);\n\n      if (shared.value === '0') {\n        shared.value = '1';\n        shared.style.color = 'green';\n      } else if (shared.value === '1') {\n        shared.value = '0';\n        shared.style.color = 'black';\n      }\n\n      console.log(user);\n      console.log(credential);\n      this.credentialService.share(user, credential).subscribe(result => {\n        this.notifService.showNotif(result.toString(), 'confirmation');\n      }, error => {\n        this.notifService.showNotif(error.toString(), 'warning');\n      });\n    }\n\n    getShareable() {\n      let canshare = [];\n\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.credential.owner !== this.users[i]) {\n          canshare.push(this.users[i]);\n        }\n      }\n\n      return canshare;\n    }\n\n    updateButtons(user) {\n      const shared = document.getElementById(user);\n\n      if (this.credential.access.indexOf(user) === -1) {\n        shared.style.color = 'black';\n        return 0;\n      }\n\n      shared.style.color = 'green';\n      return 1;\n    }\n\n  }\n\n  CredentialComponent.ɵfac = function CredentialComponent_Factory(t) {\n    return new (t || CredentialComponent)(i0.ɵɵdirectiveInject(i1.CredentialService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n\n  CredentialComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CredentialComponent,\n    selectors: [[\"credential-component\"]],\n    inputs: {\n      credential: \"credential\"\n    },\n    outputs: {\n      deleteEvent: \"deleteEvent\",\n      eventEmitter: \"eventEmitter\"\n    },\n    decls: 32,\n    vars: 10,\n    consts: [[1, \"card\"], [1, \"credential-card\"], [1, \"domain\"], [\"class\", \"owner\", 4, \"ngIf\"], [1, \"username\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"readonly\", \"\", \"type\", \"string\", 3, \"value\"], [1, \"password\"], [\"matInput\", \"\", \"readonly\", \"\", \"type\", \"password\", 3, \"id\", \"value\", \"click\"], [1, \"menu\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Delete or edit\", 3, \"matMenuTriggerFor\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"routerLink\", \"state\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"mat-menu-item\", \"\", 3, \"matMenuTriggerFor\", 4, \"ngIf\"], [1, \"owner\"], [\"mat-menu-item\", \"\", 3, \"matMenuTriggerFor\"], [1, \"usermenu\"], [\"usermenu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"value\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"value\", \"id\", \"click\"]],\n    template: function CredentialComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, CredentialComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function CredentialComponent_Template_input_click_14_listener() {\n          return ctx.showPassword(ctx.credential.password);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 9);\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵelementStart(17, \"mat-icon\");\n        i0.ɵɵtext(18, \"more_vert\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-menu\", null, 11);\n        i0.ɵɵelementStart(21, \"button\", 12);\n        i0.ɵɵelementStart(22, \"mat-icon\");\n        i0.ɵɵtext(23, \"edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"span\");\n        i0.ɵɵtext(25, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function CredentialComponent_Template_button_click_26_listener() {\n          return ctx.delete(ctx.credential.domain);\n        });\n        i0.ɵɵelementStart(27, \"mat-icon\");\n        i0.ɵɵtext(28, \"delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"span\");\n        i0.ɵɵtext(30, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, CredentialComponent_button_31_Template, 9, 2, \"button\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(20);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.credential.domain);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.credential.access == null);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.credential.username);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"id\", ctx.credential.password);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.credential.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c0))(\"state\", ctx.credential);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.credential.access != null);\n      }\n    },\n    directives: [i5.MatCard, i6.NgIf, i7.MatFormField, i7.MatLabel, i8.MatInput, i9.MatButton, i10.MatMenuTrigger, i11.MatIcon, i10.MatMenu, i10.MatMenuItem, i2.RouterLink, i6.NgForOf],\n    styles: [\".date[_ngcontent-%COMP%]{grid-area:date}.menu[_ngcontent-%COMP%], .usermenu[_ngcontent-%COMP%]{grid-area:menu;justify-self:end;align-self:start}.card[_ngcontent-%COMP%]{height:300px;width:250px}.type[_ngcontent-%COMP%]{grid-area:type;height:48px!important;width:48px!important;font-size:48px!important}.domain[_ngcontent-%COMP%]{grid-area:domain;font-size:24px}.owner[_ngcontent-%COMP%]{display:inline-block;grid-area:owner;font-size:10px}.username[_ngcontent-%COMP%]{grid-area:username}.password[_ngcontent-%COMP%]{grid-area:password}.credential-card[_ngcontent-%COMP%]{align-self:center;display:grid;grid-template-columns:50px 50px 50px 50px 50px;grid-template-rows:30px;grid-template-areas:\\\"domain domain domain domain menu\\\" \\\"owner owner owner owner owner\\\" \\\"username username username username username\\\" \\\"password password password password password\\\" \\\"delete . . . .\\\"}\"]\n  });\n  return CredentialComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}