{"ast":null,"code":"import { NotificationService } from '../_services/notification.service';\nimport { UserService } from '../_services/user.service';\nimport { CredentialService } from '../_services/credential.service';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/credential.service\";\nimport * as i2 from \"../_services/notification.service\";\nimport * as i3 from \"../_services/user.service\";\nexport let AddComponent = /*#__PURE__*/(() => {\n  class AddComponent {\n    constructor(credentialservice, notifService, userService) {\n      this.credentialservice = credentialservice;\n      this.notifService = notifService;\n      this.userService = userService;\n      this.mode = 'determinate';\n      this.bufferValue = 0;\n      this.activities = ['directions_walk', 'directions_run', 'directions_bike'];\n      this.color = 'primary';\n      this.activity = this.activities[0];\n    }\n\n    ngOnInit() {\n      this.credential = {\n        owner: this.userService.getUsername(),\n        minutes: Math.floor(Math.random() * 180),\n        steps: Math.floor(Math.random() * 25000),\n        activityType: Math.floor(Math.random() * 3),\n        createdDate: new Date()\n      };\n    }\n\n    save() {\n      console.log(this.parecord);\n      this.parecordservice.addRecord(this.parecord).pipe(first()).subscribe(resp => {\n        this.notifService.showNotif(resp, 'response');\n      }, error => {\n        this.notifService.showNotif(error);\n      });\n    }\n\n    updateCalories(event) {\n      this.parecord.calories = event.value;\n    }\n\n    updateMinutes(event) {\n      this.parecord.minutes = event.value;\n    }\n\n    updateCaloriesInput(event) {\n      this.parecord.calories = event.target.value;\n    }\n\n    updateMinutesInput(event) {\n      this.parecord.minutes = event.target.value;\n    }\n\n    updateActivity(event) {\n      this.parecord.activityType = event.value;\n    }\n\n    updateDate(event) {\n      this.parecord.createdDate = event.target.value;\n    }\n\n  }\n\n  AddComponent.ɵfac = function AddComponent_Factory(t) {\n    return new (t || AddComponent)(i0.ɵɵdirectiveInject(i1.CredentialService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.UserService));\n  };\n\n  AddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddComponent,\n    selectors: [[\"app-add\"]],\n    decls: 2,\n    vars: 0,\n    template: function AddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"add works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return AddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}