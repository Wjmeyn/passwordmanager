{"ast":null,"code":"import { NotificationService } from '../_services/notification.service';\nimport { UserService } from '../_services/user.service';\nimport { CredentialService } from '../_services/credential.service';\nimport { AuthService } from '../_services/auth.service';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/credential.service\";\nimport * as i2 from \"../_services/notification.service\";\nimport * as i3 from \"../_services/auth.service\";\nimport * as i4 from \"../_services/user.service\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nexport let AddComponent = /*#__PURE__*/(() => {\n  class AddComponent {\n    constructor(credentialservice, notifService, authService, userService) {\n      this.credentialservice = credentialservice;\n      this.notifService = notifService;\n      this.authService = authService;\n      this.userService = userService;\n      this.mode = 'determinate';\n      this.bufferValue = 0;\n      this.activities = ['directions_walk', 'directions_run', 'directions_bike'];\n      this.color = 'primary';\n      this.activity = this.activities[0];\n    }\n\n    ngOnInit() {\n      this.authService.currentUser.pipe(first()).subscribe(user => {\n        this.username = user.username;\n      });\n      this.credential = {\n        owner: this.username,\n        domain: '',\n        username: '',\n        password: '',\n        createdDate: new Date()\n      };\n    }\n\n    save() {\n      console.log(this.credential);\n      this.credentialservice.add(this.credential).pipe(first()).subscribe(resp => {\n        this.notifService.showNotif(resp, 'response');\n      }, error => {\n        this.notifService.showNotif(error);\n      });\n    }\n\n    updateCalories(event) {//this.parecord.calories = event.value;\n    }\n\n    updateMinutes(event) {//.parecord.minutes = event.value;\n    }\n\n    updateCaloriesInput(event) {//this.parecord.calories = event.target.value;\n    }\n\n    updateMinutesInput(event) {//this.parecord.minutes = event.target.value;\n    }\n\n    updateActivity(event) {//this.parecord.activityType = event.value;\n    }\n\n    updateDate(event) {//this.parecord.createdDate = event.target.value;\n    }\n\n  }\n\n  AddComponent.ɵfac = function AddComponent_Factory(t) {\n    return new (t || AddComponent)(i0.ɵɵdirectiveInject(i1.CredentialService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n\n  AddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddComponent,\n    selectors: [[\"app-add\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"title\"], [\"appearance\", \"fill\"], [3, \"value\", \"valueChange\", \"selectionChange\"], [3, \"value\"]],\n    template: function AddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"section\", 0);\n        i0.ɵɵtext(2, \"Add Credential\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Select exercise Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-select\", 2);\n        i0.ɵɵlistener(\"valueChange\", function AddComponent_Template_mat_select_valueChange_7_listener($event) {\n          return ctx.credential.domain = $event;\n        })(\"selectionChange\", function AddComponent_Template_mat_select_selectionChange_7_listener($event) {\n          return ctx.updateDomain($event);\n        });\n        i0.ɵɵelementStart(8, \"mat-option\");\n        i0.ɵɵtext(9, \"None\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-option\", 3);\n        i0.ɵɵtext(11, \"Walk\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-option\", 3);\n        i0.ɵɵtext(13, \"Run\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-option\", 3);\n        i0.ɵɵtext(15, \"Bike\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", ctx.credential.domain);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"value\", 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"value\", 2);\n      }\n    },\n    directives: [i5.MatFormField, i5.MatLabel, i6.MatSelect, i7.MatOption],\n    styles: [\"\"]\n  });\n  return AddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}